<!--
  ~ Copyright (c) 2016 Dmitry Ovchinnikov
  ~ Marid, the free data acquisition and visualization software
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans">

    <bean name="protoRoot" class="org.marid.proto.StdProtoRoot">
        <description>Protocol infrastructure root</description>

        <constructor-arg name="id" value="root"/>
        <constructor-arg name="name" value="root"/>
    </bean>

    <bean name="floatCodec" class="org.marid.proto.codec.FloatCodec">
        <description>Float value codec</description>
    </bean>

    <bean name="intCodec" class="org.marid.proto.codec.IntCodec">
        <description>Integer value codec</description>
    </bean>

    <bean name="ABCD" class="org.marid.proto.codec.TwoBytesOrder" factory-method="valueOf">
        <description>Two byte ABCD codec</description>

        <constructor-arg name="name" value="ABCD"/>
    </bean>

    <bean name="BADC" class="org.marid.proto.codec.TwoBytesOrder" factory-method="valueOf">
        <description>Two byte BADC codec</description>

        <constructor-arg name="name" value="BADC"/>
    </bean>

    <bean name="DCBA" class="org.marid.proto.codec.TwoBytesOrder" factory-method="valueOf">
        <description>Two byte DCBA codec</description>

        <constructor-arg name="name" value="DCBA"/>
    </bean>

    <bean name="CDAB" class="org.marid.proto.codec.TwoBytesOrder" factory-method="valueOf">
        <description>Two byte DCBA codec</description>

        <constructor-arg name="name" value="CDAB"/>
    </bean>

    <bean name="doubleConsumer" class="org.marid.proto.codec.Consumers" factory-method="doubleConsumer">
        <description>Double consumer</description>

        <constructor-arg name="consumer" value="#{null}"/>
        <constructor-arg name="doubleCodec" value="#{null}"/>
    </bean>

    <bean name="floatConsumer" class="org.marid.proto.codec.Consumers" factory-method="floatConsumer">
        <description>Float consumer</description>

        <constructor-arg name="consumer" value="#{null}"/>
        <constructor-arg name="floatCodec" value="#{null}"/>
    </bean>

    <bean name="intConsumer" class="org.marid.proto.codec.Consumers" factory-method="intConsumer">
        <description>Integer consumer</description>

        <constructor-arg name="consumer" value="#{null}"/>
        <constructor-arg name="integerCodec" value="#{null}"/>
    </bean>

    <bean name="protoHealthMonitor" class="org.marid.proto.health.StdProtoBusHealthMonitor">
        <description>Protocol infrastructure health monitor</description>

        <constructor-arg name="bus" value="#{null}"/>
        <constructor-arg name="scheduler">
            <bean name="executor" class="java.util.concurrent.ScheduledThreadPoolExecutor">
                <constructor-arg name="corePoolSize" value="1"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="props">
            <bean name="props" class="org.marid.proto.health.StdProtoBusHealthMonitorProps"/>
        </constructor-arg>
    </bean>

    <bean class="org.marid.proto.modbus.ModbusTcpDriver" name="modbusTcpDriver">
        <description>MODBUS TCP driver</description>

        <constructor-arg name="bus" value="#{null}" type="org.marid.proto.ProtoBus"/>
        <constructor-arg name="id" value="drv1"/>
        <constructor-arg name="name" value="Driver 1"/>
        <constructor-arg name="props">
            <bean class="org.marid.proto.modbus.ModbusTcpDriverProps" name="driverProps"/>
        </constructor-arg>
    </bean>
</beans>